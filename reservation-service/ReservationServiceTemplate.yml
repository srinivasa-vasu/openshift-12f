apiVersion: v1
kind: Template
metadata:
  name: reservation-service
  annotations:
    description: Application template of 12f spring-boot msa
    tags: spring-boot,reservation-service,oc,12f,msa
    version: "1.0"
    openshift.io/display-name: "12f Reservation Micro-Service"
labels:
  app: reservation-service
  createdBy: SV
parameters:
  -
    name: APPLICATION_NAME
    value: reservation-service
    description: Name of the application
    required: true
    displayName: Application Name
  -
    name: CONFIG_SERVICE
    value: http://config-service
    description: Config Service app and port
    required: true
    displayName: Config Service
  -
    name: EUREKA_SERVICE
    value: http://eureka-service/eureka
    description: Registry Service app and port
    required: true
    displayName: Registry Service
  -
    name: ZIPKIN_SERVICE
    value: http://zipkin-service
    description: Zipkin Service app and port
    required: true
    displayName: Zipkin Distributed Tracing Service
  -
    name: GIT_URL
    value: https://github.com/srinivasa-vasu/openshift-12f.git
    description: Source GIT Repository Path
    required: true
    displayName: GIT Repo
  -
    name: GIT_BRANCH
    value: master
    description: Source GIT Repository Branch
    required: true
    displayName: GIT Repo Branch
  -
    name: GIT_CONTEXT_DIR
    value: reservation-service
    description: Source GIT Repository Context Directory
    required: true
    displayName: GIT Repo Context Directory
  -
    name: IMAGE_STREAM_NAMESPACE
    value: 12f
    description: Namespace in which the ImageStreams are installed
    required: true
    displayName: Imagestream Namespace
objects:
  -
    apiVersion: v1
    kind: ImageStream
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
  -
    apiVersion: v1
    kind: BuildConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      triggers:
        -
          type: GitHub
          github:
            secret: secret101
        -
          type: Generic
          generic:
            secret: secret201
        -
          type: ImageChange
        -
          type: ConfigChange
      runPolicy: Serial
      source:
        type: Git
        git:
          uri: ${GIT_URL}
          ref: ${GIT_BRANCH}
        contextDir: ${GIT_CONTEXT_DIR}
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            namespace: openshift
            name: fis-java-openshift:2.0
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources:
      triggers:
        -
          type: ConfigChange
        -
          type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              -
                ${APPLICATION_NAME}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_STREAM_NAMESPACE}
              name: ${APPLICATION_NAME}:latest
      replicas: 1
      selector:
        app: ${APPLICATION_NAME}
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}
        spec:
          containers:
            -
              name: ${APPLICATION_NAME}
              image: ${APPLICATION_NAME}
              ports:
                -
                  name: app
                  containerPort: 8000
                  protocol: TCP
                -
                  name: jolokia
                  containerPort: 8778
                  protocol: TCP
              env:
                -
                  name: config_service
                  value: ${CONFIG_SERVICE}
                -
                  name: eureka_service
                  value: ${EUREKA_SERVICE}
                -
                  name: zipkin_service
                  value: ${ZIPKIN_SERVICE}
                -
                  name: SPRING_PROFILES_ACTIVE
                  value: openshift
              readinessProbe:
                httpGet:
                  path: /healthz
                  port: 8000
                initialDelaySeconds: 15
                timeoutSeconds: 1
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 8000
                initialDelaySeconds: 60
                timeoutSeconds: 1
              resources:
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
  -
   apiVersion: v1
   kind: Service
   metadata:
     name: ${APPLICATION_NAME}
     labels:
       app: ${APPLICATION_NAME}
   spec:
     ports:
       -
         name: ${APPLICATION_NAME}
         port: 80
         targetPort: 8000
     selector:
       app: ${APPLICATION_NAME}
  -
    apiVersion: v1
    kind: Route
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      to:
        kind: Service
        name: ${APPLICATION_NAME}
        weight: 100
      port:
        targetPort: ${APPLICATION_NAME}