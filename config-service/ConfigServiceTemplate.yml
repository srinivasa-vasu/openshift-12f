apiVersion: v1
kind: Template
metadata:
  name: config-service
  annotations:
    description: Application template for 12f spring-boot config server
    tags: spring-boot,config-service,oc,12f
    version: "1.0"
labels:
  app: config-service
  createdBy: SV
parameters:
  -
    name: APPLICATION_NAME
    value: config-service
    description: Name of the application
    required: true
    displayName: Application Name
objects:
  -
    apiVersion: v1
    kind: ImageStream
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
  -
    apiVersion: v1
    kind: BuildConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      triggers:
        -
          type: GitHub
          github:
            secret: secret101
        -
          type: Generic
          generic:
            secret: secret201
        -
          type: ImageChange
        -
          type: ConfigChange
      runPolicy: Serial
      source:
        type: Git
        git:
          uri: https://github.com/srinivasa-vasu/openshift-12f.git
          ref: master
        contextDir: config-service
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            namespace: openshift
            name: fis-java-openshift:2.0
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources:
      triggers:
        -
          type: ConfigChange
        -
          type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              -
                ${APPLICATION_NAME}
            from:
              kind: ImageStreamTag
              name: ${APPLICATION_NAME}:latest
      replicas: 1
      selector:
        app: ${APPLICATION_NAME}
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}
        spec:
          containers:
            -
              name: ${APPLICATION_NAME}
              image: ${APPLICATION_NAME}
              ports:
                -
                  containerPort: 8888
                  protocol: TCP
              resources:
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
  -
   apiVersion: v1
   kind: Service
   metadata:
     name: ${APPLICATION_NAME}
     labels:
       app: ${APPLICATION_NAME}
   spec:
     ports:
       -
         name: ${APPLICATION_NAME}
         port: 80
         targetPort: 8888
     selector:
       app: ${APPLICATION_NAME}
  -
    apiVersion: v1
    kind: Route
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      to:
        kind: Service
        name: ${APPLICATION_NAME}
        weight: 100
      port:
        targetPort: ${APPLICATION_NAME}